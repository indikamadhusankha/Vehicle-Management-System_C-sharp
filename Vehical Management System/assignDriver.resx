<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>